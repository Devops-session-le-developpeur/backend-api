# ✅ Name of the Workflow
name: Pipeline CI/CD Backend-api

# ✅ Trigger this workflow on push to main branch
on:
  push:
    branches:
      - main

env:
  Docker_IMAGE: ${{ vars.DOCKERHUB_USERNAME }}/api-backend-devops

jobs:
  run-unit-test-job:
    runs-on: ubuntu-latest
    steps:
      - name: clone soure code
        uses: actions/checkout@v5

      - name: install dependencies
        run: npm install

      - name: run unit test
        run: npm run test

  sonarqube-code-quality-scan-job:
    runs-on: ubuntu-latest
    needs: run-unit-test-job
    steps:
      - name: Clone Source Code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install dependencies
        run: npm install

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          # SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

  snyk-code-security-scan-job:
    runs-on: ubuntu-latest
    needs: run-unit-test-job
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install Dependency Scanning Tool (Snyk)
        run: npm install -g snyk

      - name: Snyk Authentication
        run: snyk auth ${{ secrets.SNYK_TOKEN }}

      - name: Run Snyk Vulnerability Scan
        run: snyk monitor --all-projects --org="assidiwassdevops-session-le-developpeur"

  build-docker-image-and-push:  
    runs-on: ubuntu-latest
    needs: [sonarqube-code-quality-scan-job, snyk-code-security-scan-job]
    steps:
      - name: clone Source code
        uses: actions/checkout@v5
      - name: build docker image
        run: docker build -t ${{ env.Docker_IMAGE }} .

      - run: docker images
      - run: docker tag ${{ env.Docker_IMAGE }} ${{ env.Docker_IMAGE }}:v${{ github.run_number }}
      - run: docker images
      - run: echo ${{ vars.DOCKERHUB_USERNAME }}
      - run: echo   ${{ secrets.DOCKERHUB_TOKEN }}

      - name: login to docker hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: push docker hub image  latest
        run: docker push ${{ env.Docker_IMAGE }}:v${{ github.run_number }}

      - name: push docker hub image  latest
        run: docker push ${{ env.Docker_IMAGE }}:latest

  deploey-docker-image:
    name: Build
    needs: build-docker-image-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Execute remote SSH commands using password
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.VPS_HOST }}
          username: user
          password: ${{ secrets.VPS_PASSWORD }}
          script: |
            cd /home/user/session13/devops_script/backend-api/dev
            sudo docker compose pull  api
            sudo docker compose up -d --force-recreate --remove-orphans api
